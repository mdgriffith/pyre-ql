on:
  push:
    tags:
      - test-release
      - version-*

name: Prepare release
jobs:
  release:
    name: Release - ${{ matrix.platform.release_for }}
    strategy:
      matrix:
        platform:
          - release_for: Linux-x86_64
            os: ubuntu-20.04
            target: x86_64-unknown-linux-musl
            bin: pyre
            name: pyre-Linux-x86_64-musl.tar.gz
            command: build

          - release_for: Windows-x86_64
            os: windows-latest
            target: x86_64-pc-windows-msvc
            bin: pyre.exe
            name: pyre-Windows-x86_64.zip
            command: both

          - release_for: macOS-x86_64
            os: macOS-latest
            target: x86_64-apple-darwin
            bin: pyre
            name: pyre-Darwin-x86_64.tar.gz
            command: both

    runs-on: ${{ matrix.platform.os }}
    permissions:
      # Permissions needed to create a release
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Cache cargo & target directories
      - name: Cache cargo & target directories
        uses: Swatinem/rust-cache@v2
        with:
          key: "v2"

      - name: Install musl-tools on Linux
        run: sudo apt-get update --yes && sudo apt-get install --yes musl-tools
        if: contains(matrix.platform.target, 'musl')

      - name: Install build-essential on Linux
        run: sudo apt-get install --yes build-essential
        if: contains(matrix.platform.target, 'musl')

      # Build binary
      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: ${{ matrix.platform.command }}
          target: ${{ matrix.platform.target }}
          args: "--locked --release"
          strip: true

      # Publish Release if tags are `test-release'.
      - name: Publish release artifacts
        if: contains(github.ref, 'refs/tags/test-release')
        uses: actions/upload-artifact@v4
        with:
          name: pyre-${{ matrix.platform.name }}
          path: "target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }}"

      # Package as archive
      - name: Package as for github release
        shell: bash
        run: |
          cd target/${{ matrix.platform.target }}/release
          if [[ "${{ matrix.platform.os }}" == "windows-latest" ]]; then
            7z a ../../../${{ matrix.platform.name }} ${{ matrix.platform.bin }}
          else
            tar czvf ../../../${{ matrix.platform.name }} ${{ matrix.platform.bin }}
          fi
          cd -

      # Extract version number from tag and set it as an environment variable on Linux/macOS
      # I can't get the same
      - name: Extract version number on Linux/macOS
        if: runner.os != 'Windows'
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      # Publish Github release if tag begins with `version-`
      - name: Publish GitHub release
        if: startsWith( github.ref, 'refs/tags/version-' ) && runner.os != 'Windows'
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          files: "${{ matrix.platform.name }}"
          body_path: "docs/releases/${{ env.VERSION }}.md"

      # Publish Github release if tag begins with `version-`
      # (No body_path on Windows)
      # This is a hack because the version extraction doesn't work on the windows machine.
      - name: Publish GitHub release (windows)
        if: startsWith( github.ref, 'refs/tags/version-' ) && runner.os == 'Windows'
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          files: "${{ matrix.platform.name }}"
